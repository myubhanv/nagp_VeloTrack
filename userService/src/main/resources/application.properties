server.port=${PORT:8080}
spring.application.name=fleet-user-service

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka

eureka.instance.appname=${spring.application.name}
eureka.instance.hostname=fleet-user-service
eureka.instance.instance-id=fleet-user-service:${server.port}
eureka.instance.prefer-ip-address=false

# Connection pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000

# --- JPA CONFIG ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# --- FLYWAY CONFIG ---
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# --- ACTUATOR / MONITORING ---
management.endpoints.web.exposure.include=health,info

# --- DATASOURCE CONFIG ---
spring.datasource.url=jdbc:mysql://db:3306/fleetuserdb
spring.datasource.username=user
spring.datasource.password=pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# If Hibernate cannot infer the dialect from JDBC metadata at startup (e.g. containerized DB not available
# when the SessionFactory is being built), provide the dialect explicitly. Adjust if you use MariaDB.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Also expose the Jakarta Persistence properties as an alternative source Hibernate may consult.
# These mirror the spring.datasource.* values above. Keep them in sync if you change the datasource.
jakarta.persistence.jdbc.url=jdbc:mysql://db:3306/fleetuserdb
jakarta.persistence.jdbc.user=user
jakarta.persistence.jdbc.password=pass
jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver



